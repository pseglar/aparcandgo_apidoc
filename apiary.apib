FORMAT: 1A
HOST: http://aparcandgo.apiary.io/

# APARCA&GO

APARCA AND GO RESTFUL API DOCUMENTATION

+ Trait CORS
    + Response Headers
        + Access-Control-Allow-Origin (string, `*`) ... Access-Control-Allow-Origin.

# Group USER MANAGEMENT
## USER - Authentication [/user/token{?provider,email,password,keeplogged}]

Login equivalent

<blockquote>
ABOUT USING TOKENS

Tokens can be used within **Authorization** header and as a URI parameter **access_token**
examples:
+ **POST** url/method?access_token=348543y958789673598
+ **GET** url/method -> Authorization:348543y958789673598

</blockquote>

### TOKEN GET [GET]
Log in equivalent.

+ New session token request. Used also to renew the existing token.
+ email and password required if provider is different than social.
+ If keeplogged true: token expirement set to long term (X month)
+ If request has a valid token. current token is deleted (used for token renewal)

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + provider (optional,local) -  local(default), google, facebook
    + email (optional,string, `pseglar@gmail.com`) - user identification
    + password (optional,number, `3489576897`) - base64 encoded password
    + keeplogged (optional, boolean, `true`) - boolean. false by default.

+ Response 200 (application/json)

        {
        "access_token":"03807cb390319329bdf6c777d4dfae9c0d3b3c35",
        "expires_in":"2017-05-01"
        }
### TOKEN DELETE  [DELETE]

Log out equivalent. deletes valid token from system
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok"
        }

## USER - VIEW/CREATE/UPDATE USER [/user]

### GET [GET]

Retrieves and store user information.

+ default_invoice_profile: should be updated on first purchase if null.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
        

+ Response 200 (application/json)

        {
            "status":"ok",
            "user":
            {
                "user_id":45346,
                "email":"pseglar@gmail.com",
                "name":"Pau",
                "lastname":"Seglar Segura",
                "phone": "607787857",
                "zip": "08301",
                "lang":"ca_ES",
                "accept_promos": true,
                "default_invoice_profile": null,
                "email_validated": true,
                "phone_validated": true,
                "points":
                {
                    "currentpoints":0.95
                },
                "profiles":
                [
                    {
                        "profile_id":45346,
                        "type":"corporate",
                        "company_id":34536,
                        "rights":
                        {
                            "role":"administrator",
                            "permissions": 
                            {
                                "manage_paymethods": true,
                                "manage_users": true,
                                "manage_reservations": true
                            }
                        },
                        "costcenter_id": 76645,
                        "invoice_name":"Acmesa",
                        "invoice_nif":"j66245523",
                        "invoice_email":"invoices@acmesa.com",
                        "invoice_address":"c/ alegria 23",
                        "invoice_city":"Barcelona",
                        "invoice_state":"Barcelona",
                        "invoice_zip": "08355"
                    },
                    {
                        "profile_id":45347,
                        "type":"professional",
                        "monthly_invoice": false,
                        "invoice_name":"Acmesa",
                        "invoice_nif":"j66245523",
                        "invoice_email":"invoices@acmesa.com",
                        "invoice_address":"c/ alegria 23",
                        "invoice_city":"Barcelona",
                        "invoice_state":"Barcelona",
                        "invoice_zip": "08355"
                    }
                ],
                "vehicles":
                [
                    {
                        "vehicle_id":45346,
                        "type":"vw golf gris",
                        "plate":"3453GHM"
                    },
                    {
                        "vehicle_id":45347,
                        "type":"renault twingo azul",
                        "plate":"B-5468-UC"
                    }
                ],
                "paymethods":
                [
                    {
                        "paymethod_id":45346,
                        "type":"company_card",
                        "company_id": 45678,
                        "costcenter_id": null,
                        "alias": "Acmesa",
                        "last_card_numbers": "4568",
                        "expire":{"year":19,"month":7},
                        "added": "2017-05-01T22:35:17.02",
                        "checked": "2017-05-01T22:35:17.02"
                    },
                    {
                        "paymethod_id":45346,
                        "type":"card",
                        "alias": "Acmesa",
                        "last_card_numbers": "4568",
                        "expire":{"year":19,"month":7},
                        "added": "2017-05-01T22:35:17.02",
                        "checked": "2017-05-01T22:35:17.02"
                    }
                ]
            }
        }
### UPDATE [PUT]

only update new information. profiles and vehicles are updated under custom endpoint.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35


+ Request (application/json)

        {
            "email":"pseglar@gmail.com",
            "name":"Pau",
            "lastname":"Seglar Segura",
            "phone": "607787857",
            "zip":08354
            "accept_promos": true,
            "default_invoice_profile": null,
            "lang":"ca_ES"
        }

+ Response 200 (application/json)

        {
        "status":"ok"
        }
###  CREATE [POST]

<blockquote>
Two examples:

+ Basic user
+ User with invoice profile

</blockquote>

+ Request (application/json)
    Create basic user
    + Body

            {
            "email":"pseglar@gmail.com",
            "password":"base64encodedpwd",
            "name":"Pau",
            "lastname":"Seglar Segura",
            "phone": "607787857",
            "zip":08354,
            "lang":"ca_ES",
            "activation_code":"34578934756389"
            }


+ Response 200 (application/json)

        {
        "status":"ok",
        "user":
            {
            "user_id":45346,
            "email":"pseglar@gmail.com",
            "name":"Pau",
            "lastname":"Seglar Segura",
            "phone": "607787857",
            "accept_promos": true,
            "default_invoice_profile": null,
            "lang":"ca_ES"
            }
        }


+ Request (application/json)
    Create user with invoice profile.
    + Body

            {
            "email":"pseglar@gmail.com",
            "password":"base64encodedpwd",
            "name":"Pau",
            "lastname":"Seglar Segura",
            "phone": "607787857",
            "zip":08354,
            "lang":"ca_ES",
            "invoice_profile":
                {
                    "monthly_invoice": false,
                    "invoice_name":"Acmesa",
                    "invoice_nif":"j66245523",
                    "invoice_email":"invoices@acmesa.com",
                    "invoice_address":"c/ alegria 23",
                    "invoice_city":"Barcelona",
                    "invoice_state":"Barcelona",
                    "invoice_zip": "08355"
                }
            }

+ Response 200 (application/json)

        {
        "status":"ok",
        "user":
            {
            "user_id":45346,
            "email":"pseglar@gmail.com",
            "name":"Pau",
            "lastname":"Seglar Segura",
            "phone": "607787857",
            "accept_promos": true,
            "default_invoice_profile": 45347,
            "profiles":
                [
                {
                "profile_id":45347,
                "type":"professional",
                "monthly_invoice": false,
                "invoice_name":"Acmesa",
                "invoice_nif":"j66245523",
                "invoice_email":"invoices@acmesa.com",
                "invoice_address":"c/ alegria 23",
                "invoice_city":"Barcelona",
                "invoice_state":"Barcelona",
                "invoice_zip": "08355"
                }
                ]
            }
        }

## USER - PASSWORD MANAGEMENT [/user/password{?email}]

### SET NEW PASSWORD [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body

            {
            "current":"base64",
            "new":"base64",
            }


+ Response 200 (application/json)

        {
        "status":"ok"
        }

### REQUEST FORGOTTEN PASSWORD  [GET]


+ Parameters

    + email (optional,pseglar@gmail.com) - user email


+ Response 200 (application/json)

        {
        "status":"ok"
        }

## USER POINTS  [/user/points]
### REQUEST USER POINTS [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "points":
            {
            "currentpoints":0.95
            }
        }
## USER RESEND SMS  [/user/smsvalidation]
### REQUEST SMS VALIDATION [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok"
        }

## USER - Profiles [/user/profiles]

Retrieves the list of existing profiles for the requesting user.



+ types:
    + **professional**: different invoicing profiles created by a user for personal use. he can change it.
    + **corporate**: invoice profile created by a company for this user. only corporate owners can modify.
+ rights:
    + **user**: this profile is member of this company
    + **manager**: this profile can manage this company (make reservations for other corporate users)
    + **administrator**: this profile has administrator access. professional profiles has always full access.
+ monthly_invoice: tells to group invoices.
+ send_reservation_copy: corporate account option.
+ send_invoice_copy: corporate account option.

### PROFILES GET [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
            "status":"ok",
            "profiles":
            [
                {
                    "profile_id":45346,
                    "type":"corporate",
                    "company_id":34536,
                    "rights":
                    {
                        "role":"administrator",
                        "permissions": {
                            "manage_paymethods": true,
                            "manage_users": true,
                            "manage_reservations": true
                        }
                    },
                        "costcenter_id": 76645,
                        "monthly_invoice": false,
                        "invoice_per_costcenter": false,
                        "send_reservation_copy":[{"user_id":345346},{"user_id":234345}],
                        "send_invoice_copy":[{"user_id":345346},{"user_id":234345}],
                        "invoice_name":"Acmesa",
                        "invoice_nif":"j66245523",
                        "invoice_email":"invoices@acmesa.com",
                        "invoice_address":"c/ alegria 23",
                        "invoice_city":"Barcelona",
                        "invoice_state":"Barcelona",
                        "invoice_zip": "08355"
                    },
                {
                    "profile_id":45347,
                    "type":"professional",
                    "monthly_invoice": false,
                    "invoice_name":"Acmesa",
                    "invoice_nif":"j66245523",
                    "invoice_email":"invoices@acmesa.com",
                    "invoice_address":"c/ alegria 23",
                    "invoice_city":"Barcelona",
                    "invoice_state":"Barcelona",
                    "invoice_zip": "08355"
                }
            ]
        }
## USER - Profile Management [/user/profile/{profile_id}]

GET, DELETE or UPDATE a profile

### VIEW PROFILE [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + profile_id ... prifile id

+ Response 200 (application/json)

        {
        "status":"ok",
        "profile":
            {
            "profile_id":45347,
            "type":"professional",
            "monthly_invoice": false,
            "invoice_name":"Acmesa",
            "invoice_nif":"j66245523",
            "invoice_email":"invoices@acmesa.com",
            "invoice_address":"c/ alegria 23",
            "invoice_city":"Barcelona",
            "invoice_state":"Barcelona",
            "invoice_zip": "08355"
            }
        }
### DELETE PROFILE [DELETE]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + profile_id ... prifile id

+ Response 200 (application/json)

        {
        "status":"ok"
        }

### UPDATE PROFILE [PUT]

profile_id is mandatory.
rest of parameters are optional. will only update existing parameters.

+ Parameters
    + profile_id

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Request (application/json)

        {
            "profile_id":45346,
            "monthly_invoice": false,
            "invoice_name":"Acmesa",
            "invoice_nif":"j66245523",
            "invoice_email":"invoices@acmesa.com",
            "invoice_address":"c/ alegria 23",
            "invoice_city":"Barcelona",
            "invoice_state":"Barcelona",
            "invoice_zip": "08355"
        }

+ Response 200 (application/json)

        {
        "status":"ok",
        "profile":
            {
            "profile_id":45346,
            "monthly_invoice": false,
            "invoice_name":"Acmesa",
            "invoice_nif":"j66245523",
            "invoice_email":"invoices@acmesa.com",
            "invoice_address":"c/ alegria 23",
            "invoice_city":"Barcelona",
            "invoice_state":"Barcelona",
            "invoice_zip": "08355"
        }
        }

## USER - Create invoice profile [/user/profile]
### CREATE PROFILE [POST]

profile_id not needed in this case.
**profile creation only creates personal profiles.**
rights is always administrator for personal profiles. not needed.
corporate profiles are created when a business account is created using other endpoint.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Request (application/json)

        {
            "monthly_invoice": false,
            "invoice_name":"Acmesa",
            "invoice_nif":"j66245523",
            "invoice_email":"invoices@acmesa.com",
            "invoice_address":"c/ alegria 23",
            "invoice_city":"Barcelona",
            "invoice_state":"Barcelona",
            "invoice_zip": "08355"
        }

+ Response 200 (application/json)

        {
        "status":"ok",
        "profile":
            {
            "profile_id":45347,
            "type":"professional",
            "monthly_invoice": false,
            "invoice_name":"Acmesa",
            "invoice_nif":"j66245523",
            "invoice_email":"invoices@acmesa.com",
            "invoice_address":"c/ alegria 23",
            "invoice_city":"Barcelona",
            "invoice_state":"Barcelona",
            "invoice_zip": "08355"
            }
        }

## USER - Payment Methods [/user/paymethods{?company_id}]

Retrieves the list of existing payment methods for the requesting user.

in corporate accounts, only return valid cards for the current user (not showing other cost center cards).

currently two types of payment methods:
+ card
+ company_card

+ expire: integer with the expiration time in format YYMM (year/month 2 digits)

### LIST [GET]
+ Parameters
    + company_id (optional, number) - if set, only show this company cars. need rights.
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "paymethods":
            [
                {
                    "paymethod_id":45346,
                    "type":"company_card",
                    "company_id": 45678,
                    "costcenter_id": null,
                    "alias": "Acmesa",
                    "last_card_numbers": "4568",
                    "expire":{"year":19,"month":7},
                    "added": "2017-05-01T22:35:17.02",
                    "checked": "2017-05-01T22:35:17.02"
                },
                {
                    "paymethod_id":45346,
                    "type":"card",
                    "alias": "Acmesa",
                    "last_card_numbers": "4568",
                    "expire":{"year":19,"month":7},
                    "added": "2017-05-01T22:35:17.02",
                    "checked": "2017-05-01T22:35:17.02"
                }
            ]
        }
## CREATE PAYMETHOD [/user/paymethod]
### CREATE [POST]
<blockquote>

**Atention: only PCI SERVER CAN CREATE CARDS IN API SERVER.**

</blockquote>

<blockquote>TO ADD A CARD USERS MUST USE **/addcard** endpoint in the PCI SERVER.
PCI_SIGNATURE is a made from a secret key shared between servers
</blockquote>

+ Request (application/json)

        {
        "user_id":3456456
        "type":"company_card",
        "company_id": 45678,
        "costcenter_id": null,
        "alias": "Acmesa",
        "last_card_numbers": "4568",
        "expiration_month":7,
        "expiration_year":19,
        "added": "2017-05-01T22:35:17.02",
        "checked": "2017-05-01T22:35:17.02",
        "pci_signature":"03807cb390319329bdf6c777d4dfae9c0d3b3c35"
        }
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
            
          



+ Response 200 (application/json)

        {
        "status":"ok",
        "paymethod_id":45346,
        "api_signature":"03807cb390319329bdf6c777d4dfae9c0d3b3c35"
        }
## PAYMETHOD MANAGEMENT [/user/paymethod/{paymethod_id}{?pci_signature}]

### GET [GET]
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
+ Parameters
    + paymethod_id (optional, number) - optional if POST. required if GET or PUT

+ Response 200 (application/json)

        {
        "status":"ok",
        "paymethod":
            {
            "paymethod_id":45346,
            "type":"company_card",
            "company_id": 45678,
            "costcenter_id": null,
            "alias": "Acmesa",
            "last_card_numbers": "4568",
            "expire":{"year":19,"month":7},
            "added": "2017-05-01T22:35:17.02",
            "checked": "2017-05-01T22:35:17.02"
            }
        }
+ Response 404 (application/json)

        {
        "status":"not found",
        }
### DELETE [DELETE]
<blockquote>

**Atention: only PCI SERVER CAN DELETE CARDS IN API SERVER.**
TO DELETE A CARD USERS MUST USE **/deletecard** endpoint in the PCI SERVER.
</blockquote>

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
+ Parameters
    + paymethod_id (integer)
    + pci_signature

+ Response 200 (application/json)

        {
        "status":"ok"
        }
+ Response 404 (application/json)

        {
        "status":"not found"
        }
### UPDATE [PUT]

<blockquote>
When a card is added, card details in PCI server cannot be modified. only control parameters stored in API server can be modified.
Users can only update alias parameters.
</blockquote>

+ Request (application/json)

        {
       "paymethod_id":45346,
        "alias": "Acmesa",
        "costcenter_id": null
        }
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "paymethods":
            {
            "paymethod_id":45346,
            "type":"minot ,
            "company_id": 45678,
            "costcenter_id": null,
            "alias": "Acmesa",
            "last_card_numbers": "4568",
            "expire":{"year":19,"month":7},
            "added": "2017-05-01T22:35:17.02",
            "checked": "2017-05-01T22:35:17.02"
            }
        }

## LIST Vehicles [/user/vehicles]

Retrieves the list of existing vehicles for the requesting user.

### LIST [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "vehicles":
                [
                    {
                    "vehicle_id":45346,
                    "type":"vw golf gris",
                    "plate":"3453GHM"
                    },
                    {
                    "vehicle_id":45347,
                    "type":"renault twingo azul",
                    "plate":"B-5468-UC"
                    }
                ]
        }
## CREATE VEHICLE [/user/vehicle]
### CREATE [POST]



+ Request (application/json)

        {
        "type":"vw golf gris",
        "plate":"3453GHM"
        },
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35


+ Response 200 (application/json)

        {
        "status":"ok",
        "vehicle":
            {
            "vehicle_id":45346,
            "type":"vw golf gris",
            "plate":"3453GHM"
            }
        }
## MANAGE VEHICLE [/user/vehicle/{vehicle_id}]

### GET [GET]
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
+ Parameters
    + vehicle_id (integer)

+ Response 200 (application/json)

        {
        "status":"ok",
        "vehicle":
            {
            "vehicle_id":45346,
            "type":"vw golf gris",
            "plate":"3453GHM"
            }
        }
+ Response 404 (application/json)

        {
        "status":"not found",
        }
### DELETE [DELETE]


+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
+ Parameters
    + vehicle_id (integer)

+ Response 200 (application/json)

        {
        "status":"ok"
        }
+ Response 404 (application/json)

        {
        "status":"not found"
        }

### UPDATE [PUT]

+ Request (application/json)

        {
        "type":"vw golf gris",
        "plate":"3453GHM"
        },
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "vehicle":
            {
            "vehicle_id":45346,
            "type":"vw golf gris",
            "plate":"3453GHM"
            }
        }

## USER - Reset Password [/users/password_recovery]
### CREATE REQUEST [POST]

email is mandatory.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Request (application/json)

        {
            "email":"pseglar@gmail.com"
        }

+ Response 200 (application/json)

        {
        "status":"ok"
        }
+ Response 404 (application/json)

        {
        "status":"not found"
        }

## USER - Unsubscribe [/user/unsubscribe/{user_id}{?email,signature}]

### GET [GET]

To be implemented in the future. allow a user to unsubscribe after receivign email.
authorization token have to be created.
proposal:
! TODO: improve security.

+ Parameters
    + user_id
    + email
    + signature - md5(email, server_secret)

+ Response 200 (application/json)

        {
        "status":"ok"
        }
+ Response 404 (application/json)

        {
        "status":"not found"
        }
        
## VALIDATE CODE [/user/code_validation/{user_id}{?code}]

###VALIDATE [GET]

Multipurpose validation system.
Main purpose of this method is to send one clic requests to users (i.e. company invitations)

Response will depend on code type.
it may be a json reponse, a redirection or HTML

+ Parameters
    + user_id
    + code - provided hash

+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 200 (application/html)

        <html>
            <body>
                Good!
            </body>
        </html>
        
+ Response 302

    + Header
    
            Location: http://api.example.com/redirection
            
            
# Group PCI Card management

## PCI- Add card [/addcard{?user_id,authorization_token,cardnumber,expiration_month,expiration_year,cvv,type,company_id,costcenter_id,alias,signature}]

### GET [GET]
PCI EXIGE MÉTODO GET.

<blockquote>
When calling PCI server, we use authentication header to send a request signature.
<h3>HOW TO CALCULATE AUTHENTICATION HEADER:</h3>

sha256(query_string, authorization_token)

for example:
```
request:http://{{pciserver}}/addcard?user_id=234324&authorization_token=03807cb390319329bdf6c777d4dfae9c0d3b3c35&cardnumber=2342345647567&expiration_month=12&expiration_year=17&cvv=457
```
How to calculate:
```
$query_string="user_id=234324&authorization_token=03807cb390319329bdf6c777d4dfae9c0d3b3c35&cardnumber=2342345647567&expiration_month=12&expiration_year=17&cvv=457";

$auth_token=03807cb390319329bdf6c777d4dfae9c0d3b3c35

Authorization Header: sha256($query_string,$auth_token);
```
</blockquote>

<blockquote>
PCI SERVER will then:

+ check the card
+ call /paymethod [post] to validate user and get a paymethod_id.
+ store the card( PCI card will be paired with API paymethod_id ).

</blockquote>

<blockquote>
COMPANY CARDS

When calling with company_id, card will be stored as company card if user has admin rights

</blockquote>

+ Parameters
    + user_id - 296
    + authorization_token - 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + cardnumber - 4106410038435018
    + expiration_month - 10
    + expiration_year - 18
    + cvv - 246
    + type (optional) - company_card
    + company_id (optional) - if set. this card will be corporate card
    + costcenter_id (optional) -if set. this card will be assigned to this costcenter only in API server. PCI won't store this info.
    + alias (optional) -
    + signature (string, required) - sign using 

+ Request (application/json)

    + Headers

            Authorization: 1806377b304fd52f1c5fb5289d6edb108f56b2e654f3098b3cb4a8ce40d0e266

+ Response 200 (application/json)

        {
        "status":"ok",
        "paymethod":
            {
            "paymethod_id":45346,
            "type":"company_card",
            "company_id": 45678,
            "costcenter_id": null,
            "alias": "Acmesa",
            "last_card_numbers": "4568",
            "expire":{"year":19,"month":7},
            "added": "2017-05-01T22:35:17.02",
            "checked": "2017-05-01T22:35:17.02"
            }
        }
## PCI - Delete card [/deletecard{?user_id,authorization_token,paymethod_id}]

### GET [GET]

<blockquote>
Same authorization schema used in [/addcard]
</blockquote>
<blockquote>
PCI SERVER will then:

+ call /paymethod [delete] to validate user and delete paymethod
+ delete card in DB.

</blockquote>
+ Parameters
    + user_id - 296
    + authorization_token - 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + paymethod_id - 54687

+ Request (application/json)

    + Headers

            Authorization: 1806377b304fd52f1c5fb5289d6edb108f56b2e654f3098b3cb4a8ce40d0e266

+ Response 200 (application/json)

        {
        "status":"ok"
        }

# Group PRODUCT INFORMATION
## PRODUCT - LIST PRODUCTS [/product/list{?lang}]

<blockquote>
**TIP**
GET /product/{id} will return information only for this product ID.
</blockquote>

<blockquote>
Nota para desarrollo backend.

place y city de un product debe ser un dato relacional de la tabla cities y places respectivamente para evitar duplicidad de ciudades y productos.
place y city deben disponer de nombre en los 4 idiomas.
product description debe estar en los 4 idiomas.
</blockquote>

<blockquote>
Nota para desarrollo frontend.

product short_description debe ser usado en la pantalla de selección de producto (tras la seleccion de ciudad y área de servicio)
</blockquote>

<blockquote>
Les seccions informatives han de ser totes iguals i han de poder tenir el titol, cos, imatge o icona. totes opcionals.
</blockquote>
### GET [GET]

<blockquote>
AVOID INNECESSARY PRODUCT UPDATES

To avoid unnecessary product updates we will implement etag caching.
https://support.cloudflare.com/hc/en-us/articles/218505467-Does-CloudFlare-support-ETag-headers-#caching

with each /products response we will set an **etag** header with a serial.
If browser request has a **If-None-Match** header with the serial of the current valid product list (current valid etag)
Server will respond with **304 Not-Modified**
</blockquote>


+ Parameters
    + lang - es
+ Response 200 (application/json)

        {
            "status": "ok",
            "cities": [
                {
                "id": 1,
                "name": "Barcelona",
                "location": {
                    "lat": 2.245456,
                    "lng": 40.548756
                },
                "places": [{
                    "id": 12,
                    "name": "Aeropuerto de Barcelona",
                    "type": "airport",
                    "location": {
                        "lat": 2.245456,
                        "lng": 40.548756
                    },
                    "products": [{
                        "product_id": 9,
                        "product_name": "Express",
                        "provider": "Aparca&Go",
                        "service": "express",
                        "info": {
                            "short_description": "Dejas el coche en nuestro aparcamiento y te llevamos en bus.",
                            "location": {
                                "lat": 2.245456,
                                "lng": 40.548756,
                                "city": {
                                    "name": "Barcelona"
                                },
                                "place": {
                                    "name": "Aeroport del Prat",
                                    "type": "airport"
                                }
                            },
                            "service_info": [{
                                "name": "Como llegar",
                                "body": "<h2>Desde Ronda de Dalt</h2><p>Tomamos la salida 54 “aeropuerto”, nos incorporamos a la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mtrs. estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Rda. Litoral</h2><p>Tomamos la salida 18 “aeropuerto”, continuamos en dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Gran Vía</h2><p>Seguimos la Gran via y continuamos por la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autopista C-32, desde Tarragona</h2><p>Dirección Barcelona, tomamos la salida 54 (El Prat - Aeropuerto) y continuamos dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autovía C-31 desde Castelldefels</h2><p>Tomamos la salida de Viladecans/Les filipines/Mercabarna-flor. Continuamos dirección Viladecans, pasaremos dos rotondas dirección Viladecans, en la tercera rotonda, tomamos primera salida a la derecha dirección Barcelona/Mercabarna-flor, continuamos recto por la carretera B-204 hasta la próxima rotonda, la bordeamos y tomamos la tercera salida, estamos en Aparca&Go (Edificio Orange Serviauto).</p>",
                                "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                            }, {
                                "name": "Horario",
                                "body": "Abierto las 24 horas del dia los 365 días del año."
                            }, {
                                "name": "¿En qué terminal opera?",
                                "body": "aparca&go opera en todas las terminales"
                            }, {
                                "name": "¿Cuanto se tarda en llegar al aeropuerto?",
                                "body": "Tardamos entre 4 y 5 minutos."
                            }, {
                                "name": "¿Dónde nos dejá la lanzadera?",
                                "body": "Justo delante de la terminal, así evitáis tener que desplazaros con el equipaje."
                            }, {
                                "name": "¿Qué debemos hacer para que venga a recogernos una lanzadera?",
                                "body": "En aparca&go Express no es necesario una llamada, simplemente tenéis que ir a nuestro punto de recogida donde siempre estará una furgoneta esperándoos."
                            }, {
                                "name": "¿Dónde nos recogen a la vuelta?",
                                "body": "Te indicaremos la ubicación exacta en la app, pero clica en el enlace para ver los puntos de recogida."
                            }],
                            "terminals": [{
                                "name": "Terminal1",
                                "check-in": {
                                    "location": {
                                        "lat": 2.245456,
                                        "lng": 40.548756
                                    },
                                    "instructions": [{
                                        "icon": "map",
                                        "name": null,
                                        "body": "Antes de partir, pulsa 'más información' para obtener indicaciones sobre cómo llegar al Parking."
                                    }, {
                                        "icon": "agent",
                                        "name": null,
                                        "body": "Cuando llegues al parking, pulsa 'entrar al parking' y muestra tu pantalla al operario"
                                    }, {
                                        "icon": "bus",
                                        "name": null,
                                        "body": "Tras aparcar tu coche, súbete al bus lanzadera que te llevará a tu terminal"
                                    }],
                                    "final_instructions": [{
                                        "icon": "bus",
                                        "name": null,
                                        "body": "Tras aparcar tu coche, súbete al bus lanzadera que te llevará a la terminal"
                                    }, {
                                        "icon": null,
                                        "name": null,
                                        "body": "A la vuelta, te estaremos esperando en el punto de recogida, no es necesario que nos llames."
                                    }],
                                    "info": [{
                                        "name": "Como llegar",
                                        "body": "<h2>Desde Ronda de Dalt</h2><p>Tomamos la salida 54 “aeropuerto”, nos incorporamos a la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mtrs. estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Rda. Litoral</h2><p>Tomamos la salida 18 “aeropuerto”, continuamos en dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Gran Vía</h2><p>Seguimos la Gran via y continuamos por la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autopista C-32, desde Tarragona</h2><p>Dirección Barcelona, tomamos la salida 54 (El Prat - Aeropuerto) y continuamos dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autovía C-31 desde Castelldefels</h2><p>Tomamos la salida de Viladecans/Les filipines/Mercabarna-flor. Continuamos dirección Viladecans, pasaremos dos rotondas dirección Viladecans, en la tercera rotonda, tomamos primera salida a la derecha dirección Barcelona/Mercabarna-flor, continuamos recto por la carretera B-204 hasta la próxima rotonda, la bordeamos y tomamos la tercera salida, estamos en Aparca&Go (Edificio Orange Serviauto).</p>",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }, {
                                        "name": "Horario",
                                        "body": "Abierto las 24 horas del dia los 365 días del año."
                                    }, {
                                        "name": "Dónde debo subir a la lanzadera",
                                        "body": "lorem ipsum"
                                    }, {
                                        "name": "Dónde me dejará la lanzadera",
                                        "body": "lorem ipsum"
                                    }]
                                },
                                "check-out": {
                                    "location": {
                                        "lat": 2.245456,
                                        "lng": 40.548756
                                    },
                                    "instructions": [{
                                        "icon": "bus",
                                        "name": null,
                                        "body": "A tu regreso, dirígete al punto de recogida y coge un bus lanzadera, no hace falta que nos llames."
                                    }, {
                                        "icon": "map",
                                        "name": null,
                                        "body": "El punto de recogida se encuentra enfrente del mosaico de la terminal 1."
                                    }],
                                    "final_instructions": [{
                                        "icon": "flag",
                                        "name": "Gracias por tu estancia",
                                        "body": "Recuerda que puedes consultar tus tickets y tus facturas via web desde tu cuenta de usuario en www.aparcandgo.com"
                                    }],
                                    "info": [{
                                        "name": "Punto de recogida",
                                        "body": "El punto de recogida blablabla",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }, {
                                        "name": "Horario y frecuencia",
                                        "body": "Cada 5 minutos, las 24 horas del dia, todos los dias del año."
                                    }]
                                }
                            }],
                            "extras": [{
                                "extra_id": 23,
                                "name": "Cubierto",
                                "icon": "house",
                                "description": "Aparcar en zona cubierta",
                                "unitary_price": 1,
                                "price_calculation": "daily"
                            }, {
                                "extra_id": 24,
                                "name": "Lavado exterior",
                                "type": "wash",
                                "icon": "house",
                                "description": "Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                                "unitary_price": 7.55,
                                "price_calculation": "final_price"
                            }]
                        }
                    }, {
                        "product_id": 5,
                        "product_name": "Premium",
                        "provider": "Aparca&Go",
                        "service": "premium",
                        "info": {
                            "short_description": "Dejas el coche en la terminal, nos llamas y te lo venimos a recoger.",
                            "location": {
                                "lat": 2.245456,
                                "lng": 40.548756,
                                "city": {
                                    "name": "Barcelona"
                                },
                                "place": {
                                    "name": "Aeroport del Prat",
                                    "type": "airport"
                                }
                            },
                            "service_info": [{
                                "name": "Punto de recogida",
                                "body": " lorem imsum",
                                "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                            }, {
                                "name": "Horario",
                                "body": "Recogemos tu coche las 24 horas del dia los 365 días del año."
                            }, {
                                "name": "¿En qué terminal opera?",
                                "body": "aparca&go opera en todas las terminales"
                            }, {
                                "name": "¿Cuanto tendré que esperar?",
                                "body": "Si nos avisas con tiempo, te estaremos esperando en el punto de recogida."
                            }, {
                                "name": "¿Dónde me entregaréis mi coche a la vuelta?",
                                "body": "Justo delante de la terminal, así evitáis tener que desplazaros con el equipaje."
                            }, {
                                "name": "¿Qué debemos hacer para avisar de nuestra llegada?",
                                "body": "Te lo indicaremos claramente cuando hayas hecho la reserva. Simplemente, cuando salgas hacia el aeropuerto, solicita tu recogida pulsando el botón habilitado para ello."
                            }],
                            "terminals": [{
                                "terminal_id": 1001,
                                "name": "Terminal1",
                                "check-in": {
                                    "location": {
                                        "lat": 2.245456,
                                        "lng": 40.548756
                                    },
                                    "instructions": [{
                                        "icon": "map",
                                        "name": null,
                                        "body": "Antes de partir, pulsa 'más información' para obtener indicaciones sobre cómo llegar al Parking."
                                    }, {
                                        "icon": "agent",
                                        "name": null,
                                        "body": "Cuando llegues al parking, pulsa 'entrar al parking' y muestra tu pantalla al operario"
                                    }, {
                                        "icon": "bus",
                                        "name": null,
                                        "body": "Tras aparcar tu coche, súbete al bus lanzadera que te llevará a tu terminal"
                                    }],
                                    "final_instructions": [{
                                        "icon": "bus",
                                        "name": null,
                                        "body": "Tras aparcar tu coche, súbete al bus lanzadera que te llevará a la terminal"
                                    }, {
                                        "icon": null,
                                        "name": null,
                                        "body": "A la vuelta, te estaremos esperando en el punto de recogida, no es necesario que nos llames."
                                    }],
                                    "info": [{
                                        "name": "Como llegar",
                                        "body": "<h2>Desde Ronda de Dalt</h2><p>Tomamos la salida 54 “aeropuerto”, nos incorporamos a la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mtrs. estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Rda. Litoral</h2><p>Tomamos la salida 18 “aeropuerto”, continuamos en dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Gran Vía</h2><p>Seguimos la Gran via y continuamos por la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autopista C-32, desde Tarragona</h2><p>Dirección Barcelona, tomamos la salida 54 (El Prat - Aeropuerto) y continuamos dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autovía C-31 desde Castelldefels</h2><p>Tomamos la salida de Viladecans/Les filipines/Mercabarna-flor. Continuamos dirección Viladecans, pasaremos dos rotondas dirección Viladecans, en la tercera rotonda, tomamos primera salida a la derecha dirección Barcelona/Mercabarna-flor, continuamos recto por la carretera B-204 hasta la próxima rotonda, la bordeamos y tomamos la tercera salida, estamos en Aparca&Go (Edificio Orange Serviauto).</p>",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }, {
                                        "name": "Horario",
                                        "body": "Abierto las 24 horas del dia los 365 días del año."
                                    }, {
                                        "name": "Dónde debo subir a la lanzadera",
                                        "body": "lorem ipsum"
                                    }, {
                                        "name": "Dónde me dejará la lanzadera",
                                        "body": "lorem ipsum"
                                    }]
                                },
                                "check-out": {
                                    "location": {
                                        "lat": 2.245456,
                                        "lng": 40.548756
                                    },
                                    "instructions": [{
                                        "icon": "bus",
                                        "name": null,
                                        "body": "A tu regreso, dirígete al punto de recogida y coge un bus lanzadera, no hace falta que nos llames."
                                    }, {
                                        "icon": "map",
                                        "name": null,
                                        "body": "El punto de recogida se encuentra enfrente del mosaico de la terminal 1."
                                    }],
                                    "final_instructions": [{
                                        "icon": "flag",
                                        "name": "Gracias por tu estancia",
                                        "body": "Recuerda que puedes consultar tus tickets y tus facturas via web desde tu cuenta de usuario en www.aparcandgo.com"
                                    }],
                                    "info": [{
                                        "name": "Punto de recogida",
                                        "body": "El punto de recogida blablabla",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }, {
                                        "name": "Horario y frecuencia",
                                        "body": "Cada 5 minutos, las 24 horas del dia, todos los dias del año."
                                    }]
                                }
                            }],
                            "extras": [{
                                "extra_id": 23,
                                "name": "Cubierto",
                                "icon": "house",
                                "description": "Aparcar en zona cubierta",
                                "unitary_price": 1,
                                "price_calculation": "daily"
                            }, {
                                "extra_id": 24,
                                "name": "Lavado exterior",
                                "icon": "house",
                                "description": "Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                                "unitary_price": 7.55,
                                "price_calculation": "final_price"
                            }]
                        }
                    }]
                }, {
                    "id": 13,
                    "name": "Estació de Sants",
                    "type": "train",
                    "location": {
                        "lat": 2.245456,
                        "lng": 40.548756
                    },
                    "products": [{
                        "product_id": 5,
                        "product_name": "ServicioPendienteDeNombre",
                        "provider": "Aparca&Go",
                        "service": "parking",
                        "info": {
                            "short_description": "Aparcamiento a 2 minutos andando de la estación.",
                            "location": {
                                "lat": 2.245456,
                                "lng": 40.548756,
                                "city": {
                                    "name": "Barcelona"
                                },
                                "place": {
                                    "name": "Estació de sants.",
                                    "type": "train"
                                }
                            },
                            "service_info": [{
                                "name": "Como llegar",
                                "body": "<h2>Desde Ronda de Dalt</h2><p>Tomamos la salida 54 “aeropuerto”, nos incorporamos a la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mtrs. estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Rda. Litoral</h2><p>Tomamos la salida 18 “aeropuerto”, continuamos en dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Desde Gran Vía</h2><p>Seguimos la Gran via y continuamos por la Autovía C-31 dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autopista C-32, desde Tarragona</h2><p>Dirección Barcelona, tomamos la salida 54 (El Prat - Aeropuerto) y continuamos dirección Aeropuerto T1, pasada la gasolinera Cepsa, a 1000 mts., tomamos la salida 190 (Viladecans - Cargoparc), llegaremos a una rotonda, cogemos la primera salida, a 20 mts estamos en Aparca&Go (Edificio Orange Serviauto).</p><h2>Viniendo por la autovía C-31 desde Castelldefels</h2><p>Tomamos la salida de Viladecans/Les filipines/Mercabarna-flor. Continuamos dirección Viladecans, pasaremos dos rotondas dirección Viladecans, en la tercera rotonda, tomamos primera salida a la derecha dirección Barcelona/Mercabarna-flor, continuamos recto por la carretera B-204 hasta la próxima rotonda, la bordeamos y tomamos la tercera salida, estamos en Aparca&Go (Edificio Orange Serviauto).</p>",
                                "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                            }, {
                                "name": "Horario",
                                "body": "Abierto las 24 horas del dia los 365 días del año."
                            }, {
                                "name": "¿Cuanto se tarda en llegar a la estación",
                                "body": "Usualmente unos 2 minutos."
                            }, {
                                "name": "¿Dónde nos dejá la lanzadera?",
                                "body": "Este parking no necesita de un servicio de lanzadera."
                            }, {
                                "name": "¿Dónde nos recogen a la vuelta?",
                                "body": "Puedes acceder al parking caminando. está a 2 minutos de la estación."
                            }],
                            "terminals": [{
                                "terminal_id": 2001,
                                "name": "Estación de Sants",
                                "check-in": {
                                    "location": {
                                        "lat": 2.245456,
                                        "lng": 40.548756
                                    },
                                    "instructions": [{
                                        "icon": "map",
                                        "name": null,
                                        "body": "Antes de partir, pulsa 'más información' para obtener indicaciones sobre cómo llegar al Parking."
                                    }, {
                                        "icon": "agent",
                                        "name": null,
                                        "body": "Cuando llegues al parking, pulsa 'entrar al parking' y muestra tu pantalla al operario"
                                    }, {
                                        "icon": "walking",
                                        "name": null,
                                        "body": "Tras aparcar tu coche puedes acceder a la estación andando. te mostraremos un mapa en cuanto aparques para que no te pierdas."
                                    }],
                                    "final_instructions": [{
                                        "icon": "walking",
                                        "name": "Instrucciones para acceder a la estación",
                                        "body": "lorem ipum",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }],
                                    "info": [{
                                        "name": "Como llegar",
                                        "body": "blablabla",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }, {
                                        "name": "Horario",
                                        "body": "Abierto las 24 horas del dia los 365 días del año."
                                    }, {
                                        "name": "Como llego a la estación desde el parking?",
                                        "body": "lorem ipum",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }]
                                },
                                "check-out": {
                                    "location": {
                                        "lat": 2.245456,
                                        "lng": 40.548756
                                    },
                                    "instructions": [{
                                        "icon": "walking",
                                        "name": null,
                                        "body": "A tu regreso, dirígete parking para recoger tu vehículo."
                                    }, {
                                        "icon": "map",
                                        "name": null,
                                        "body": "pulsa 'más información' para obtener indicaciones para llegar al parking."
                                    }],
                                    "final_instructions": [{
                                        "icon": "flag",
                                        "name": "Gracias por tu estancia",
                                        "body": "Recuerda que puedes consultar tus tickets y tus facturas via web desde tu cuenta de usuario en www.aparcandgo.com"
                                    }],
                                    "info": [{
                                        "name": "Como llegar al parking",
                                        "body": "Desde la estación, lorem ipum",
                                        "image": "http://www.aparcandgo.com/images/lot/express.jpg"
                                    }]
                                }
                            }],
                            "extras": []
                        }
                    }]
                }]
            }, {
                "id": 2,
                "name": "Madrid",
                "places": []
            }]
        }

## PRODUCT - CALCULATE PRICE [/product/calculate/{product_id}{?start_date,end_date,extras,lang,promocode}]
Proporciona los datos de precio de un producto.
IDEA: añadir HASH para firmar la oferta. post reservation incluiría el hash para validar que el cliente ha visto el mismo precio.
### GET [GET]

+ Parameters
    + lang - es
    + product_id (integer) - 15
    + extras (optional) - 23,24
    + start_date (required, date, `2017-05-01T22:35:17.02`- 2017-05-01T22:35:17.02
    + end_date - (required, date `2017-05-01T22:35:17.02`) -2017-05-01T22:35:17.02
    + promocode - RAC

+ Request (application/json)

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35


+ Response 200 (application/json)

        {
        "status":"ok",
        "offer":
            {
            "product_id": 12,
            "start_date": "2017-05-01T22:35:17.02",
            "end_date": "2017-05-01T22:35:17.02",
            "product_price":18.90,
            "extras":
                [
                    {
                    "extra_id":23,
                    "name":"Cubierto",
                    "icon":"house",
                    "description":"Aparcar en zona cubierta",
                    "unitary_price":1,
                    "price_calculation":"daily",
                    "price":2
                    },
                    {
                    "extra_id":24,
                    "name":"Lavado exterior",
                    "type":"wash",
                    "icon":"house",
                    "description":"Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                    "unitary_price":7.55,
                    "price_calculation":"final_price",
                    "price":7.55
                    }
                ],
            "promos":
                [
                    {
                    "promo_id":23,
                    "promo_name":"RAC",
                    "discount":0.45
                    }
                ],
            "total_price":28.00,
            "hash":"5647858689689tjhgjf"
            }
        }
+ Response 500 (application/json)

        {
        "status":"out-of-stock",
        }
+ Response 400 (application/json)

        {
        "status":"product-combination",
        }
+ Response 404 (application/json)

        {
        "status":"product-not-found",
        }

# Group RESERVATIONS

## LIST RESERVATIONS  [/reservation/list{?finished,company_id}]
Compact reservation list without:
+ log
+ status.premium


<blockquote>
BACKEND: ojo! tabla reservations debe guardar user_email y profile_name, company_name y costcenter_name para prevenir errores en caso de eliminar perfiles. o actualizarlos.
</blockquote>
<blockquote>
Backend info:
LOG
se debe crear una tabla reservations_log con información relativa a cada reserva. debe ser diferente a la taba api_syslog que se generará para el registro de las llamadas API.

+ id
+ id_reservation
+ source (VARCHAR 60)
+ event (VARCHAR 200)
+ timestamp

</blockquote>
### LIST [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    
    + Parameters
        + finished (optional, boolean, `false`) - if true return finished reservation. 
        + company_id (optional, number) - if set, it will return company reservations instead user reservations. user need rights.

+ Response 200 (application/json)

        {
            "status":"ok",
            "reservations":
            [
                {
                    "reservation_id":23444,
                    "client_id":23455,
                    "client_email":"pseglar@gmail.com",
                    "profile_id":3445,
                    "profile_name":"Acmesa",
                    "company_id": null,
                    "company_name":null,
                    "costcenter_id": null,
                    "costcenter_name":null,
                    "product":
                    {
                        "product_id":12,
                         "product_name": "Express",
                         "provider": "Aparca&Go",
                        "service":"express",
                        "product_price":18.90,
                        "paid":false
                    },
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-05T22:35:17.02",
                    "end_date": "2017-05-16T22:35:17.02",
                    "trip":
                    {
                        "driver":null,
                        "phone":null,
                        "in_terminal":1001,
                        "in_passengers":2,
                        "out_terminal":1002,
                        "out_passengers":2,
                        "vehicle":{
                            "vehicle_id":null,
                            "type":null,
                            "plate":"4565GHM"
                        }
                    },
                    "extras":
                    [
                        {
                            "extra_id":23,
                            "name":"Cubierto",
                            "icon":"house",
                            "description":"Aparcar en zona cubierta",
                            "unitary_price":1,
                            "price_calculation":"daily",
                            "price":2,
                            "paid":false
                        },
                        {
                            "extra_id":24,
                            "name":"Lavado exterior",
                            "type":"wash",
                            "icon":"house",
                            "description":"Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                            "unitary_price":7.55,
                            "price_calculation":"final_price",
                            "price":7.55,
                            "paid":false
                        }
                    ],
                    "promos":
                    [
                        {
                            "promo_id":23,
                            "promo_name":"RAC",
                            "discount":0.45
                        }
                    ],
                    "status":
                    {
                        "service":"reserved"
                    },
                    "total_price":28.45,
                    "paid":false,
                    "paymethod_id":45678,
                    "paymethod_alias":"Acmesa"
                },
                {
                    "reservation_id":23444,
                    "client_id":23455,
                    "client_email":"pseglar@gmail.com",
                    "profile_id":3445,
                    "profile_name":"Acmesa",
                    "company_id": null,
                    "company_name":null,
                    "costcenter_id": null,
                    "costcenter_name":null,
                    "product":
                    {   
                        "product_id":12,
                        "product_name": "Premium",
                        "provider": "Aparca&Go",
                        "service":"premium",
                        "product_price":18.90,
                        "paid":false
                    },
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-06T22:35:17.02",
                    "end_date": "2017-05-07T22:35:17.02",
                    "trip":
                    {
                        "in_terminal":1001,
                        "out_terminal":1002,
                        "vehicle":{
                            "vehicle_id":null,
                            "type":null,
                            "plate":"4565GHM"
                        },
                        "flight_number":"IB45546",
                        "baggage": true
                    },
        
                    "extras":
                    [
                        {
                            "extra_id":23,
                            "name":"Cubierto",
                            "icon":"house",
                            "description":"Aparcar en zona cubierta",
                            "unitary_price":1,
                            "price_calculation":"daily",
                            "price":2,
                            "paid":false
                        },
                        {
                            "extra_id":24,
                            "name":"Lavado exterior",
                            "type":"wash",
                            "icon":"house",
                            "description":"Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                            "unitary_price":7.55,
                            "price_calculation":"final_price",
                            "price":7.55,
                            "paid":false
                        }
                    ],
                    "promos":
                    [
                        {
                            "promo_id":23,
                            "promo_name":"RAC",
                            "discount":0.45
                        }
                    ],
                    "status":
                    {
                        "service":"reserved"
                    },
                    "total_price":28.45,
                    "paid":false,
                    "paymethod_id":45678,
                    "paymethod_alias":"Acmesa"
                }
            ]
        }

## CREATE RESERVATION [/reservation]
Solicita una reserva.

<blockquote>
**HASHES**
El parámetro hash asegura que la reserva coincide con la oferta.
Los hash se computan a partir del md5 del objeto offer. no se guardan en ninguna parte.
</blockquote>

<blockquote>
**PROFILE_ID**
Si el profile_id es null se considera que la reserva "no necesita factura"
En frontend se pinta como el perfil personal.
</blockquote>
<blockquote>
**PRODUCT STATUS**
+ Product
    + reserved
    + in
    + out

</blockquote>
### CREATE RESERVATION [POST]

+ Request (application/json)
    Reserva servicio express.
    + Body

            {
                "client_id":23455,
                "profile_id":null,
                "paymethod_id":45,
                "product_id": 12,
                "product_name": "Premium",
                "provider": "Aparca&Go",
                "start_date": "2017-05-05T22:35:17.02",
                "end_date": "2017-05-06T22:35:17.02",
                "promocode": "RAC",
                "trip":
                    {
                    "driver":null,
                    "phone":null,
                    "in_terminal":1001,
                    "in_passengers":2,
                    "out_terminal":1002,
                    "out_passengers":2,
                    "vehicle":{
                        "vehicle_id":null,
                        "type":null
                        "plate":"4565GHM"
                        },
                    "flight_number":"IB45546",
                    },
                "extras":
                    [
                        {
                        "extra_id":23
                        },
                        {
                        "extra_id":24
                        },
                    ],
                "hash":"5647858689689tjhgjf"
            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35


+ Response 200 (application/json)

        {
        "status":"ok",
        "reservation":
                {
                    "reservation_id":23444,
                    "client_id":23455,
                    "client_email":"pseglar@gmail.com",
                    "profile_id":3445,
                    "profile_name":"Acmesa",
                    "company_id": null,
                    "company_name":null,
                    "costcenter_id": null,
                    "costcenter_name":null,
                    "product":
                    {
                        "product_id":12,
                        "service":"premium",
                        "product_price":18.90,
                        "paid":false
                    },
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-06T22:35:17.02",
                    "end_date": "2017-05-07T22:35:17.02",
                    "trip":
                    {
                        "driver":null,
                        "phone":null,
                        "in_terminal":1001,
                        "out_terminal":1002,
                        "vehicle":{
                            "vehicle_id":null,
                            "type":null,
                            "plate":"4565GHM"
                        },
                        "baggage": false,
                        "flight_number":"IB45546"
                    },
        
                    "extras":
                    [
                        {
                            "extra_id":23,
                            "name":"Cubierto",
                            "icon":"house",
                            "description":"Aparcar en zona cubierta",
                            "unitary_price":1,
                            "price_calculation":"daily",
                            "price":2,
                            "paid":false
                        },
                        {
                            "extra_id":24,
                            "name":"Lavado exterior",
                            "type":"wash",
                            "icon":"house",
                            "description":"Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                            "unitary_price":7.55,
                            "price_calculation":"final_price",
                            "price":7.55,
                            "paid":false
                        }
                    ],
                    "promos":
                    [
                        {
                            "promo_id":23,
                            "promo_name":"RAC",
                            "discount":0.45
                        }
                    ],
                    "status":
                    {
                        "service":"reserved"
                    },
                    "total_price":28.45,
                    "paid":false,
                    "paymethod_id":45678,
                    "paymethod_alias":"Acmesa",
                    "log":
                    [
                        {
                            "timestamp":"2017-05-05T22:35:17.02",
                            "source":"client|agent[pseglar@aparcandgo.com]",
                            "event":"Reserva realizada"
                        },
                        {
                            "timestamp":"2017-05-05T22:35:17.02",
                            "source":"client",
                            "event":"Entrada a parking"
                        }
                    ]
                }
            }


+ Response 400 (application/json)

        {
        "status":"invalid-hash",
        }
+ Response 500 (application/json)

        {
        "status":"out-of-stock"
        }


## VIEW/UPDATE/DELETE RESERVATION [/reservation/{reservation_id}]
### VIEW RESERVATION [GET]
    requiere reservation_id
    devuelve objeto reservation (ver /reservations)

+ Parameters
    + reservation_id - 5465467


+ Response 200 (application/json)

        {
            "status":"ok",
            "reservation":
                {
                    "reservation_id":23444,
                    "client_id":23455,
                    "client_email":"pseglar@gmail.com",
                    "profile_id":3445,
                    "profile_name":"Acmesa",
                    "company_id": null,
                    "company_name":null,
                    "costcenter_id": null,
                    "costcenter_name":null,
                    "product":
                    {
                        "product_id":12,
                        "product_name": "Premium",
                        "provider": "Aparca&Go",
                        "service":"premium",
                        "product_price":18.90,
                        "paid":false
                    },
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-06T22:35:17.02",
                    "end_date": "2017-05-07T22:35:17.02",
                    "trip":
                    {
                        "driver":null,
                        "phone":null,
                        "in_terminal":1001,
                        "out_terminal":1002,
                        "vehicle":{
                            "vehicle_id":null,
                            "type":null,
                            "plate":"4565GHM"
                        },
                        "baggage": true,
                        "flight_number":"IB45546"
                    },
        
                    "extras":
                    [
                        {
                            "extra_id":23,
                            "name":"Cubierto",
                            "icon":"house",
                            "description":"Aparcar en zona cubierta",
                            "unitary_price":1,
                            "price_calculation":"daily",
                            "price":2,
                            "paid":false
                        },
                        {
                            "extra_id":24,
                            "name":"Lavado exterior",
                            "type":"wash",
                            "icon":"house",
                            "description":"Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                            "unitary_price":7.55,
                            "price_calculation":"final_price",
                            "price":7.55,
                            "paid":false
                        }
                    ],
                    "promos":
                    [
                        {
                            "promo_id":23,
                            "promo_name":"RAC",
                            "discount":0.45
                        }
                    ],
                    "status":
                    {
                        "service":"reserved",
                        "premium":
                        {
                            "check-in":"unconfirmed|requested|completed",
                            "check-out":"unconfirmed|requested|completed",
                            "client":
                            {
                                "timestamp":"2017-05-01T22:35:17.02",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            },
                            "agent":
                            {
                                "agent_id":345435,
                                "agent_status":"check-in",
                                "name":"Pau Seglar",
                                "picture":"https://www.aparcandgo.com/images/43534645645",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            }
                        }
                    },
                    "total_price":28.45,
                    "paid":false,
                    "paymethod_id":45678,
                    "paymethod_alias":"Acmesa",
                    "log":
                    [
                        {
                            "timestamp":"2017-05-05T22:35:17.02",
                            "source":"client|agent[pseglar@aparcandgo.com]",
                            "event":"Reserva realizada"
                        },
                        {
                            "timestamp":"2017-05-05T22:35:17.02",
                            "source":"client",
                            "event":"Entrada a parking"
                        }
                    ]
                }
        }   

+ Response 404 (application/json)

        {
        "status":"not found"
        }
### DELETE RESERVATION [DELETE]

+ Response 200 (application/json)

        {
        "status":"ok"
        }

+ Response 404 (application/json)

        {
        "status":"not found"
        }
### UPDATE RESERVATION [PUT]
Currently Only profile_id and paymethod updates will be implemented

+ Request (application/json)

    Reserva servicio express.
    
    + Body
    
            {
                "profile_id":8,
                "paymethod_id":246
            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35


+ Response 200 (application/json)

        {
        "status":"ok"
        }


+ Response 400 (application/json)

        {
        "status":"invalid-hash",
        }
+ Response 500 (application/json)

        {
        "status":"out-of-stock"
        }


## PAY [/reservation/pay]

### PAY REQUEST [POST]
<blockquote>
Request reservation payment

+ If payment profile is not provided. use reservation information
+ Payment method is mandatory.
+ Payment method has to be valid to the invoice profile (corporate card cannot be used with personal profile)

</blockquote>


+ Request (application/json)

    Gate access request
    + Body

            {
                "reservation_id": 2342355,
                "profile_id":456767,
                "paymethod_id":34567,

            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok"
        }

+ Response 403 (application/json)

        {
        "status":"payment-error",
        "error":"Tarjeta denegada"
        }

+ Response 404 (application/json)

        {
        "status":"reservation not found"
        }

+ Response 400 (application/json)

        {
        "status":"invalid-paymethod"
        }


## PREMIUM SERVICE [/reservation/premium/{reservation_id}]

<blockquote>

Solicita o actualiza info sobre un servicio de entrega o recogida (depende del estado de la reserva y del origen)

Los datos de predicción debe obtenerlos mediante llamadas al objeto GOOGLE API directions.
+ info https://developers.google.com/maps/documentation/javascript/directions
+ objeto directions https://developers.google.com/maps/documentation/javascript/3.exp/reference#DirectionsResult

</blockquote>
<blockquote>
PREDICTION

Los valores del objeto prediction pueden sacarse de la llamada a google API getDirections o de la propia posición GPS.
más info: https://developers.google.com/maps/documentation/javascript/directions
NOTA: la predicción no tendrá en cuenta el tráfico porque no disponemos de la licencia PREMIUM
</blockquote>

### REQUEST SERVICE [POST]
<blockquote>
Solicita un servicio de entrega o recogida (depende del estado de la reserva)
</blockquote>


+ Request (application/json)
    solicita recogida o entrega.
    el objeto prediction es opcional. Prediction se calculará en backend a partir de la posición.
    para ahorra llamadas a Google API, la APP premium no utilizará prediction.

    + Body
    
            {
                "position":
                    {
                        "lat":0.34456645
                        "lng":0.34456645
                    },
                "prediction":
                    {
                    "distance":345,
                    "duration":34556
                    }
            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)
    Respueta OK.

    + Body

            {
            "status":"ok",
            "reservation":
                {
                "reservation_id":23444,
                "status":"reservation status object. see /reservations"
                }
            }

+ Response 404 (application/json)

        {
        "status":"reservation not found"
        }
### UPDATE TRACKING INFORMATION [PUT]
 <blockquote>
Actualiza los datos de traking de cliente.
</blockquote>

+ Request (application/json)
    solicita recogida o entrega.
    el objeto prediction es opcional. Prediction se calculará en backend a partir de la posición.
    para ahorra llamadas a Google API, la APP premium no utilizará prediction.

    + Body
    
            {
            
                "position":
                    {
                        "lat":0.34456645,
                        "lng":0.34456645
                    },
                "prediction":
                    {
                    "distance":345,
                    "duration":34556
                    },
            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)
    Respueta OK.

    + Body
    
            {
            "status":"ok",
            "reservation":
                {
                    "reservation_id":23444,
                    "status":
                    {
                        "service":"reserved",
                        "premium":
                        {
                            "check-in":"unconfirmed|requested|completed",
                            "check-out":"unconfirmed|requested|completed",
                            "client":
                            {
                                "timestamp":"2017-05-01T22:35:17.02",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            },
                            "agent":
                            {
                                "agent_id":345435,
                                "agent_status":"check-in",
                                "name":"Pau Seglar",
                                "picture":"https://www.aparcandgo.com/images/43534645645",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            }
                        }
                    }
                }
            }
### VIEW TRACKING INFORMATION [GET]
<blockquote>
Devuelve/actualiza únicamente el contenido del elemento resetvation.status.
Está pensado para ahorrar trabajo en las llamadas de seguimiento del premium
No devuelve datos si no es una reserva premium activa.
</blockquote>

+ Parameters
    + reservation_id - 5465467

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)
    Respueta OK.

    + Body
    
            {
            "status":"ok",
            "reservation":
                {
                "reservation_id":23444,
                "status":
                    {
                        "service":"reserved",
                        "premium":
                        {
                            "check-in":"unconfirmed|requested|completed",
                            "check-out":"unconfirmed|requested|completed",
                            "client":
                            {
                                "timestamp":"2017-05-01T22:35:17.02",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            },
                            "agent":
                            {
                                "agent_id":345435,
                                "agent_status":"check-in",
                                "name":"Pau Seglar",
                                "picture":"https://www.aparcandgo.com/images/43534645645",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            }
                        }
                    }
                }
            }

## QR SCAN [/reservation/qrscan]

### ACCESS REQUEST [POST]
Used for automatic check-in/check-out Requests using scanned QR text
Usado para realizar check.in/check-out automáticamente
(el operario no debe marcar la entrada). como mucho, validar que se ha marcado la entrada y abrir la puerta.
valid

+ code debe ser válido
+ code debe corresponderse con el status de la reserva (puerta de salida solo aplica si la reserva está dentro)
+ usuario debe tener método de pago válido.

+ Request (application/json)

    Gate access request
    + Body

            {
                "reservation_id": 2342355,
                "qrscan":"47896y58967548975896475689576897546947667659d"

            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "reservation":"objeto reserva. la reserva estará pagada o dará error."
        }

+ Response 404 (application/json)

        {
        "status":"code not found"
        }

+ Response 400 (application/json)

        {
        "status":"invalid code"
        }

## GET TICKET - [/reservation/ticket/{reservation_id}{?format}]
request ticket in html, pdf or by email.

### REQUEST TICKET [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
+ Parameters
    + reservation_id (required,number,`3443`) - Reservation Id
    + format (optional,string,`html`) - html(default) | pdf | email

+ Response 200 (text/html)

        <div style="background:#eee;"><table cellpadding="0" cellspacing="0" align="center" style="border:1px solid #ccc;margin:5px auto;"><tbody><tr><td class="mono" style="font-family:Consolas, Courier New, monospace;font-size:14px;padding:40px 10px 20px 10px;background:#fff;line-height:16px;"><div style="text-align:left;font-size:27px;font-weight:normal;line-height:30px;"><b>aparca&amp;go</b> <span style="font-size:20px">Express</span></div><div style="text-align:left;font-size:10px;font-weight:normal;">Aparca &amp; Go S.L.           express@aparcandgo.com</div><div style="text-align:left;font-size:10px;font-weight:normal;">CIF B64932858              TEL 93 122 05 48</div><div style="text-align:left;font-size:10px;font-weight:normal;">Autovía C-31, salida 190 - 08830 Sant Boi de Llobregat</div><div style="text-align:left;font-size:14px;font-weight:normal;">&nbsp;</div><div style="text-align:right;font-size:14px;font-weight:normal;">Entrada nº &nbsp;&nbsp;<b>683119</b></div><div style="font-size:14px;font-weight:normal;"><div style="background:#000;height:1px;margin:7px 0px;"></div></div><div style="text-align:left;font-size:14px;font-weight:normal;">Entrada.. Barcelona T1&nbsp;&nbsp;&nbsp;<b>16/01/2017 &nbsp;18:30</b></div><div style="text-align:left;font-size:14px;font-weight:normal;">Salida... Barcelona T1&nbsp;&nbsp;&nbsp;<b>19/01/2017 &nbsp;10:00</b></div><div style="text-align:left;font-size:14px;font-weight:normal;">&nbsp;</div><div style="text-align:left;font-size:14px;font-weight:normal;">Plaza....... 729</div><div style="text-align:left;font-size:14px;font-weight:normal;">Matrícula... 45677</div><div style="font-size:14px;font-weight:normal;"><div style="background:#000;height:1px;margin:7px 0px;"></div></div><div style="text-align:center;font-size:14px;font-weight:bold;">GRÀCIES PER LA SEVA CONFIANÇA</div><div style="text-align:left;font-size:14px;font-weight:normal;">&nbsp;</div><div style="text-align:center;"><img src="/tpv/css/barcode.png" alt="2000000000683119"></div><div style="text-align:center;font-size:14px;font-weight:normal;">2000000000683119</div><div style="text-align:left;font-size:14px;font-weight:normal;">&nbsp;</div><div style="text-align:left;font-size:10px;font-weight:normal;">Preus segons tarifes vigents amb IVA inclòs.</div><div style="text-align:left;font-size:10px;font-weight:normal;">L'aparcament d'un vehicle no constitueix un contracte de</div><div style="text-align:left;font-size:10px;font-weight:normal;">dipòsit. L'empresa no respon dels objectes dipositats a</div><div style="text-align:left;font-size:10px;font-weight:normal;">l'interior del vehicle. L'usuari és responsable dels</div><div style="text-align:left;font-size:10px;font-weight:normal;">danys que ocasioni a altres vehicles.</div><div style="text-align:left;font-size:14px;font-weight:normal;">&nbsp;</div></td></tr></tbody></table></div>

+ Response 200 (application/pdf)

# Group INVOICES

## INVOICE - LIST INVOICES  [/invoice/list{?company_id}]

<blockquote>

+ RESOLUCIÓN problema del tick "monthly" cuando ya existen reservas.
propuesta:
cuando se genera un perfil de facturación (autonomo o corporativo), por defecto se configura en "factura mensual" o en "factura por servicio"? -> entiendo que factura por servicio.
En cualquier caso, si tras N estancias durante un mes, se cambia esta opción, entiendo qeu se aplica a las siguientes estancias que finalizen, no a las previas.
    + ejemplo:
    empresa tiene configurada facturación por servicio.hace 2 servicios. cambia la conf a "facturación mensual". hace 2 servicios.
        + Ese mes tendrá 3 facturas. las dos primeras al finalizar el servicio y la mensual a final de mes con otras 2.
    + ejemplo 2:
    empresa tiene configurada factura mensual.
    Hace 2 servicios.
    Cambnia la conf a facturación por servicio.
        + La empresa recibirá 3 facturas. la mensual con las dos primeras a final de mes, y las otras 2 al momento.

</blockquote>
<blockquote>
NOTA PARA BACKEND
    Al realizar la facturación mensual. Si un costcenter ha dejado de existir. Las estancias asignadas a ese costcenter se reasignan a costcenter null y pasan al grupo de estancias sin costcenter.
</blockquote>

<blockquote>
NOTA PARA BACKEND
    Al realizar la facturación. cost center debe guardarse en la tabla de facturas.
</blockquote>

### GET INVOICE LIST [GET]
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Parameters
        + company_id (optional, number) - if set, it will return company invoices instead user invoices. user must have rights.


+ Response 200 (application/json)

        {
            "status":"ok",
            "invoices":
                [
                    {
                        "invoice_id":234534,
                        "date": "2016-01-01T22:35:17.02",
                        "amount": 17.58,
                        "profile_id":45347,
                        "profile_name": "Acmesa",
                        "costcenter_id":null,
                        "costcenter_name":null
                    },
                    {
                        "invoice_id":234537,
                        "date": "2016-02-01T22:35:17.02",
                        "amount": 17.58,
                        "profile_id":45347,
                        "profile_name": "Acmesa",
                        "costcenter_id":null,
                        "costcenter_name":null
                    }
                ]
        }

## INVOICE - GET INVOICE [/invoice/{invoice_id}{?format}]
request invoice in html, pdf or by email.
### REQUEST INVOICE [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + invoice_id (required,number,`3443`) - Reservation Id
    + format (optional,string,`pdf`) - | pdf(default) | email


+ Response 200 (application/pdf)

# Group BUSINESS

## CREATE [/business]

<blockquote>
Parameter definition:

  + "send_reservation_copy": boolean - means that this user wants a copy of each reservation in this company
  + "send_invoice_copy": boolean - means that this user wants a copy of each invoice.
  + "billing_send_invoice_copy": boolean - means that a copy of each invoice should be sent to the billing address
  + "billing_email": email -- email address for billing purposes. only used if billing_send_invoice_copy is set to true.
</blockquote>

###  CREATE [POST]

+ Request (application/json)
    Create a business.
    it will add an administrator business profile to the current user.

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Body
    
            {
            "name":"Acmesa",
            "nif":"J57457g48",
            "address": "C/ dfgfdhg",
            "zip":"08354",
            "city": "la sacaremos en backend desde el CP no incluir en FE.",
            "monthly_invoice": false,
            "send_reservation_copy":false,
            "send_invoice_copy":false,
            "billing_sendinvoicecopy":false,
            "billing_email":null
            }


+ Response 200 (application/json)

        {
        "status":"ok",
        "company":
            {
            "company_id":453,
            "name":"Acmesa",
            "nif":"J57457g48",
            "address": "C/ dfgfdhg",
            "zip":"08354",
            "city": "la sacaremos en backend desde el CP no incluir en FE.",
            "monthly_invoice": false,
            "invoice_per_costcenter": false,
            "send_reservation_copy":false,
            "send_invoice_copy":false,
            "billing_send_invoice_copy":false,
            "billing_email":null
            }
        }

## VIEW/UPDATE [/business/{company_id}]
<blockquote>
BACKEND INFORMATION
send reservation copy and send invoice copy elements will be returned within business information but internally will be treated as an array of users 
[{"user_id":345346},{"user_id":234345}]
</blockquote>

### GET [GET]

Retrieves and store user information.
+ default_invoice_profile: should be updated on first purchase if null.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + company_id (required,number,`456`) 


+ Response 200 (application/json)

        {
        "status":"ok",
        "company":
            {
            "company_id":453,
            "name":"Acmesa",
            "nif":"J57457g48",
            "address": "C/ dfgfdhg",
            "zip":"08354",
            "city": "la sacaremos en backend desde el CP no incluir en FE.",
            "monthly_invoice": false,
            "invoice_per_costcenter": false,
            "send_reservation_copy":true,
            "send_invoice_copy":true,
            "billing_send_invoice_copy":false,
            "billing_email":null,
            "costcenters":
            [
                {
                "costcenter_id": 2345,
                "costcenter_name":"Ventas",
                "paymethod_id":456
                },
                {
                "costcenter_id": 2346,
                "costcenter_name":"Postventa",
                "paymethod":null
                }
            ],
            "paymethods":
                [
                    {
                        "paymethod_id":45346,
                        "type":"company_card",
                        "company_id": 456,
                        "costcenter_id": null,
                        "alias": "Acmesa",
                        "last_card_numbers": "4568",
                        "expire":{"year":19,"month":7},
                        "added": "2017-05-01T22:35:17.02",
                        "checked": "2017-05-01T22:35:17.02"
                    }
                ]
            }
        }
### UPDATE [PUT]

only update new information.

+ Parameters
    + company_id (required,number,`456`) 

+ Request (application/json)
    update business info

    
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    
    + Body
    
            {
            "name":"Acmesa",
            "nif":"J57457g48",
            "address": "C/ dfgfdhg",
            "zip":"08354",
            "city": "la sacaremos en backend desde el CP",
            "monthly_invoice": false,
            "invoice_per_costcenter": false,
            "send_reservation_copy":false,
            "send_invoice_copy":false
            "billing_send_invoice_copy":false,
            "billing_email":null
            }

+ Response 200 (application/json)

        {
        "status":"ok"
        }

## DISCOUNTS [/business/discounts/{company_id}]
    APROVAL PENDING
    discount is a %
    
+ Parameters
    + company_id (required,number,`456`) 

### GET current discounts [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "discounts":
            {
                "discount": 5,
                "rappel_multiplier": 1
            }
        }

## COST CENTERS [/business/costcenters/{company_id}]

+ Parameters
    + company_id (required,number,`456`)
    

### LIST COST CENTERS [GET]

Retrieves company cost centers.+
null paymethod means that allow all company paymethods.
+ default_invoice_profile: should be updated on first purchase if null.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "costcenters":
            [
                {
                "costcenter_id": 2345,
                "costcenter_name":"Ventas",
                "paymethod_id":456
                },
                {
                "costcenter_id": 2346,
                "costcenter_name":"Postventa",
                "paymethod":null
                }
            ]

        }
        
## COST CENTERS [/business/costcenter/{company_id}]

+ Parameters
    + company_id (required,number,`456`)

### UPDATE COST CENTERS[PUT]

only update new information.


+ Request (application/json)
    update cc info
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {
                "costcenter_id": 2345,
                "costcenter_name":"Ventas",
                "paymethod_id":45346
            }


+ Response 200 (application/json)

        {
        "status":"ok",
        "costcenter":
            {
                "costcenter_id": 2345,
                "costcenter_name":"Ventas",
                "paymethod_id":456
            },

        }
### CREATE COST CENTERS[POST]

+ Request (application/json)
    Create a cc.
    it will add an administrator business profile to the current user.

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {   
                "costcenter_name":"Ventas",
                "paymethod_id":45346
            }


+ Response 200 (application/json)

        {
        "status":"ok",
        "costcenter":
            {
                "costcenter_id": 2345,
                "costcenter_name":"Ventas",
                "paymethod_id":45346
            }
        }
## DISABLE COST CENTERS [/business/costcenters/{costcenter_id}]
### DELETE COST CENTER [DELETE]
require company administrator privileges

**FRONTEND WARNING**
Alert that :
    Existing invoices won't be changed.
    un-invoiced services assigned to this cost-center will not be assigned to any cost-center."
    costcenters wont be erased. costenters will be disabled.

+ Request (application/json)
    
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
## USERS [/business/users/{company_id}]

+ Parameters
    + company_id (required,number,`456`)


### LIST USERS [GET]

Retrieves company users

+ default_invoice_profile: should be updated on first purchase if null.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "users":
            [
                {
                    "user_id": 589,
                    "email":"pseglar@parkingkong.es",
                    "costcenter_id": 2345,
                    "rights":
                    {
                        "role":"administrator"
                    }
                }
            ]
        }
### UPDATE USER[PUT]

only update new information.


+ Request (application/json)
    update cc info
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {
                "user_id": 589,
                "email":"pseglar@parkingkong.es",
                "costcenter_id": 2345,
                "rights":
                {
                    "role":"administrator"
                }
            }


+ Response 200 (application/json)

        {
        "status":"ok"
        }
### CREATE USER[POST]
<blockquote>
FRONTEND: if user mail domain is different than company email domain, alert the user with cancel/continue option
</blockquote>
<blockquote>
FRONTEND: currently accepted roles: administrator | manager | agent
</blockquote>

+ Request (application/json)
    Create a user or a list of users.
    it will add the assigned business profile to new or existing users.
    
    **IMPORTANT**
    This request always return 200. error is defined inside.
    reason: bulk request may partly success.

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {
                [
                    {
                        "email":"pseglar@parkingkong.es",
                        "costcenter_id": null,
                        "rights":
                        {
                            "role":"administrator"
                        }
                    },
                    {
                        "email":"pseglar2@parkingkong.es",
                        "costcenter_id": 546,
                        "rights":
                        {
                            "role":"administrator"
                        }
                    },
                    {
                        "email":"buisdfparkingkong.es",
                        "costcenter_id": null,
                        "rights":
                        {
                            "role":"administrator"
                        }
                    }
                ]
            }


+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 200 (application/json)

        {
            "status":"errors found",
            "errors":
            [
                {
                    "email":"pseglar@parkingkong.es",
                    "reason":"already_existing"
                },
                {
                    "email":"pseglar2@parkingkong.es",
                    "reason":"costcenter not found"
                },
                {
                    "email":"buisdfparkingkong.es",
                    "reason":"already_existing"
                }
            ]
        }
### DELETE BUSINESS USER [DELETE]

**Only deletes from company.**
User will still exist with personal profiles


+ Request (application/json)
    
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Body
    
            {
                "user_id":589
            }

+ Response 200 (application/json)

        {
        "status":"ok"
        }

# Group ----

# Group MANAGEMENT SECTION
Resources to administrate a product.
Used in Valet APP and Administration panel.
<blockquote>
POSITION 

Every PUT mehod allow sending the optional "position" object to update APP agent's current-position.
</blockquote>



# Group AGENT MANAGEMENT
Service management methods for agents.

## LOGIN [/agent/token{?email,password,keeplogged}]

Login equivalent

### TOKEN GET [GET]
Log in equivalent.

+ New session token request. Used also to renew the existing token.
+ email and password required.
+ If keeplogged true: token expirement set to long term (X month)
+ If request has a valid token. current token is deleted (used for token renewal)

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + email (optional,string, `pseglar@gmail.com`) - user identification
    + password (optional,number, `3489576897`) - base64 encoded password
    + keeplogged (optional, boolean, `true`) - boolean. false by default.

+ Response 200 (application/json)

        {
        "access_token":"03807cb390319329bdf6c777d4dfae9c0d3b3c35",
        "expires_in":"2017-05-01"
        }
### TOKEN DELETE  [DELETE]

Log out equivalent. deletes valid token from system
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok"
        }

## VIEW/UPDATE/CREATE [/agent]
### VIEW AGENT [GET]

Retrieve AGENT information
<blockquote>
APP multiple profiles. 

app_product define the product used when using the app.
</blockquote>

<blockquote>
PREMIUM AGENT POSIBLE STATUS

+ out - agente no disponible
+ ready - agente disponible
+ service-requested - servicio asignado, pendiente de confirmar
+ check-in - servicio de recogida confirmado
+ check-out- servicio de entrega confirmado.

</blockquote>
<blockquote>
BACKEND: Necesitamos guardar esta info relacionado con el agent_id (misma tabla o separada)

+ agent_status
+ reservation_id
+ status_timestamp
+ lat
+ lng
+ position-timestamp

</blockquote>



+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
            "status":"ok",
            "agent":
            {
                "agent_id": 333,
                "email":"pseglar@aparcandgo.com",
                "name":"Pau",
                "surname": "Seglar",
                "photo":"https://pbs.twimg.com/profile_images/1484098262/calicomensaje_400x400.png",
                "phone":"607787857",
                "app_product":5,
                "premium":
                {
                    "agent_status":"ready",
                    "status_timestamp":"2017-05-01T22:35:17.02",
                    "reservation_id":null,
                    "position":
                    {
                        "timestamp":"2017-05-01T22:35:17.02",
                        "lat":0.34456645,
                        "lng":0.34456645,
                        "position_description": "base"
                    }
                },
                "products":
                [
                    {
                        "product_id": 9,
                        "product_name": "Express",
                        "service": "express",
                        "rights":
                        {
                            "role":"administrator",
                            "permissions":
                            {
                                "manage_agents": true,
                                "manage_product": true,
                                "manage_reservations": true
                            }
                        }
                    },
                    {
                        "product_id": 5,
                        "product_name": "Premium",
                        "service": "premium",
                        "rights":
                        {
                            "role":"agent",
                            "permissions":
                            {
                                "manage_agents": false,
                                "manage_product": false,
                                "manage_reservations": true
                            }
                        }
                    }
                ]
            }
        }
### UPDATE AGENT[PUT]



+ Request (application/json)

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {
                "agent":
                {
                    "email":"pseglar@aparcandgo.com",
                    "name":"Pau",
                    "surname": "Seglar",
                    "phone":"607787857",
                    "app_product":5
                },
                "position":
                {
                    "lat":0.34456645,
                    "lng":0.34456645
                } 
            }


+ Response 200 (application/json)

        {
        "status":"ok"
        }
### CREATE AGENT [POST]
**ONLY SUPERAGENTS CAN CREATE NEW AGENTS**
This method create product admin roles. low privileged accounts must be created from adminproduct methods from an admin account

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
            
    + Body
        
            {
                "email": "pseglar@aparcandgo.com",
                "password":"base64encoded",
                "product_id": "9"
            }
+ Response 200 (application/json)

        {
        "status":"ok"
        }
## PASSWORD  [/agent/password{?email}]
User's pwd methods copy.
### SET NEW PASSWORD [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body

            {
            "current":"base64",
            "new":"base64",
            }


+ Response 200 (application/json)

        {
        "status":"ok"
        }
### REQUEST FORGOTTEN PASSWORD  [GET]


+ Parameters

    + email (optional,string,`pseglar@aparcandgo.com`) - user email


+ Response 200 (application/json)

        {
        "status":"ok"
        }
## PHOTO [/agent/photo]
### SET NEW PHOTO [POST]

** ONLY JPEG FILE TYPE is ACCEPTED**

+ Request (multipart/form-data; boundary=---BOUNDARY)
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body 

            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
    
            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY


+ Response 200 (application/json)

        {
        "status":"ok"
        }
### DELETE PHOTO [DELETE]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok",
        "agent": {
            "agent_id": "274",
            "email": "pseglar@aparcandgo.com",
            "name": "Pau",
            "surname": "Seglar",
            "phone": "607787857",
            "photo": "274_20170221012913.jpg",
            "app_product": "0",
            "premium": null,
            "products": null
          }
        }
        
## AGENT READY  [/agent/ready]
notify agent_status ready
### SET AGENT READY [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok"
        }
## AGENT OUT  [/agent/out]
notify agent not ready to accept services.
agent_status must be "ready" to accept an /agent/out request.
If agent has any service assigned, this request will fail.
### SET AGENT READY [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
        "status":"ok"
        }
+ Response 403 (application/json)

        {
        "status":"service-assigned"
        }
# Group PRODUCT MANAGEMENT
Service management methods for manage a product (agents, invoices, etc)

## MANAGE PRODUCT - PENDING  [/adminproduct/{product_id}]
requiere permisos de superadmin.
usado para actualizar datos del producto. 
## ADMINPRODUCT AGENTS   [/adminproduct/agents/{product_id}]
List product agents. 
### LIST AGENTS [GET]

Retrieve AGENT information




+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Response 200 (application/json)

        {
            "status":"ok",
            "agents":
            [
                {
                    "agent_id": 333,
                    "email":"pseglar@aparcandgo.com",
                    "name":"Pau",
                    "surname": "Seglar",
                    "photo":"https://pbs.twimg.com/profile_images/1484098262/calicomensaje_400x400.png",
                    "phone":"607787857",
                    "app_product":5,
                    "premium":
                    {
                        "agent_status":"ready",
                        "reservation_id":null,
                        "status_timestamp":"2017-05-01T22:35:17.02",
                        "position":
                        {
                            "timestamp":"2017-05-01T22:35:17.02",
                            "lat":0.34456645,
                            "lng":0.34456645,
                            "description": "base",
                        }
                    },
                    "rights":
                    {
                        "role":"agent",
                        "permissions": 
                        {
                            "manage_agents": false,
                            "manage_product": false,
                            "manage_reservations": true
                        }
                    }
                },
                {
                    "agent_id": 334,
                    "email":"pseglar2@aparcandgo.com",
                    "name":"ertert",
                    "surname": "ert",
                    "photo":"https://pbs.twimg.com/profile_images/1484098262/calicomensaje_400x400.png",
                    "phone":"607787857",
                    "app_product":5,
                    "premium":null
                    "rights":
                    {
                        "role":"agent",
                        "permissions": 
                        {
                            "manage_agents": false,
                            "manage_product": false,
                            "manage_reservations": true
                        }
                    }
                }
            ]
        }
### CREATE AGENT [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {
            "email":"pseglar@aparcandgo.com",
            "role":"administrator",
            }


+ Response 200 (application/json)

        {
        "status":"ok"
        }
### UPDATE AGENT [PUT]
product agent update only updates agent role. rest of parameters should be updated from the agent account (by the agent user)
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body
    
            {
            "agent_id":333,
            "role":"administrator",
            }


+ Response 200 (application/json)

        {
        "status":"ok",
        }
        
## ADMINPRODUCT AGENTS   [/adminproduct/agents/{product_id}/{agent_id}]
body in DELETE violates RFC

### DELETE AGENT [DELETE]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    

+ Response 200 (application/json)

        {
        "status":"ok"
        }
## ADMINPRODUCT LIST INVOICES  [/adminproduct/invoicelists/{product_id}]
### GET INVOICE LIST [GET]
+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Parameters
        + product_id (required,number,`5`) - Product Id. user must have product admin rights.


+ Response 200 (application/json)

        {
            "status":"ok",
            "product_invoices":
                [
                    {
                        "product_invoice_id":234534,
                        "date": "2016-01-01T22:35:17.02",
                        "amount": 17.58,
                    },
                    {
                        "product_invoice_id":234537,
                        "date": "2016-02-01T22:35:17.02",
                        "amount": 17.58,
                    }
                ]
        }

## INVOICE - GET INVOICE [/adminproduct/invoice/{product_id}/{invoice_id}{?format}]
request invoice in html, pdf or by email.
### REQUEST INVOICE [GET]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

+ Parameters
    + product_id (required,number,`5`) - Product Id
    + invoice_id (required,number,`234534`) - Reservation Id
    + format (optional,string,`pdf`) - | pdf(default) | email


+ Response 200 (application/pdf)

## CITY [/city]
Require superadmin privileges.

## PLACE [/place]
Require superadmin privileges.
## CREATE PRODUCT - PENDING  [/adminproduct]
Require superadmin privileges

# Group SERVICE MANAGEMENT
Service management methods for manage reservations
## LIST NEXT  [/adminservice/nextservices/{product_id}{?page,start_date}]
### LIST NEXT SERVICES [GET]

Listado de servicios previstos en las próximas 24 horas.
Mismo formato que GET RESERVATION salvo log.
Únicamente muestra servicios:
+ Reserved (no caducados)
+ in (pendientes de salida).



Variable possible values
+ status.service options: reserved | in | out
+ status.premium.check-in: unconfirmed|requested|completed
+ status.premium.check-out: unconfirmed|requested|completed



+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Parameters
        + product_id (required,number,`5`) - Product Id. user must have product admin rights.
        + page (optional,number,`1`) - Pagination index.
        + start_date (optional,timestamp,) - start_date to show reservations. If not set, service default will be used.
        + start_date (optional,timestamp,) - end_date to show reservations. If not set, service default will be used.

+ Response 200 (application/json)

        {
            "status":"ok",
            "page":0,
            "pagination": 100,
            "total_services":203,
            "reservations":
            [
                {
                    "reservation_id":23444,
                    "client_id":23455,
                    "client_email":"pseglar@gmail.com",
                    "profile_id":3445,
                    "profile_name":"Acmesa",
                    "company_id": null,
                    "company_name":null,
                    "costcenter_id": null,
                    "costcenter_name":null,
                    "product":
                    {
                        "product_id":12,
                        "service":"premium",
                        "product_price":18.90,
                        "paid":false
                    },
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-06T22:35:17.02",
                    "end_date": "2017-05-07T22:35:17.02",
                    "trip":
                    {
                        "driver":null,
                        "phone":null,
                        "in_terminal":1001,
                        "out_terminal":1002,
                        "vehicle":{
                            "vehicle_id":null,
                            "type":null,
                            "plate":"4565GHM"
                        },
                        "flight_number":"IB45546"
                    },
        
                    "extras":
                    [
                        {
                            "extra_id":23,
                            "name":"Cubierto",
                            "icon":"house",
                            "description":"Aparcar en zona cubierta",
                            "unitary_price":1,
                            "price_calculation":"daily",
                            "price":2,
                            "paid":false
                        },
                        {
                            "extra_id":24,
                            "name":"Lavado exterior",
                            "type":"wash",
                            "icon":"house",
                            "description":"Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                            "unitary_price":7.55,
                            "price_calculation":"final_price",
                            "price":7.55,
                            "paid":false
                        }
                    ],
                    "promos":
                    [
                        {
                            "promo_id":23,
                            "promo_name":"RAC",
                            "discount":0.45
                        }
                    ],
                    "status":
                    {
                        "service":"reserved",
                        "premium":
                        {
                            "check-in":"unconfirmed|requested|completed",
                            "check-out":"unconfirmed|requested|completed",
                            "client":
                            {
                                "timestamp":"2017-05-01T22:35:17.02",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            },
                            "agent":
                            {
                                "agent_id":345435,
                                "name":"Pau Seglar",
                                "picture":"https://www.aparcandgo.com/images/43534645645",
                                "waiting":0,
                                "position":
                                {
                                    "lat":0.34456645,
                                    "lng":0.34456645
                                },
                                "prediction":
                                {
                                    "distance":345,
                                    "duration":34556
                                }
                            }
                        }
                    },
                    "total_price":28.45,
                    "paid":false
                }
            ]
        }    

## LIST FINISHED  [/adminservice/history/{product_id}{?page,start_date}]
### LIST COMPLETED SERVICES [GET]

Listado de servicios completados



variable possible values
+ status.service options: reserved | in | out
+ status.premium.check-in: unconfirmed|requested|completed
+ status.premium.check-out: unconfirmed|requested|completed



+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Parameters
        + product_id (required,number,`5`) - Product Id. user must have product admin rights.
        + page (optional,number,`1`) - Pagination index.
        + start_date (optional,timestamp,) - start_date to show reservations. If not set, service default will be used.
        + start_date (optional,timestamp,) - end_date to show reservations. If not set, service default will be used.

+ Response 200 (application/json)

        {
            "status":"ok",
            "page":0,
            "pagination": 100,
            "total_services":1,
            "reservations":
            [
                {
                    "reservation_id":23444,
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-06T22:35:17.02",
                    "end_date": "2017-05-07T22:35:17.02",
                    "client_id": 23455,
                    "client_email": "pseglar@gmail.com",
                    "extras":"string",
                    "total_price": 28.45,
                    "paid": true
                }
            ]
        }
        
## SEARCH RESERVATION [/adminservice/search/{product_id}{?page,query}]
### LIST COMPLETED SERVICES [GET]

Search for a reservation using reservation id, user email or phone_number. incomplete strings allowed. 



variable possible values
+ status.service options: reserved | in | out
+ status.premium.check-in: unconfirmed|requested|completed
+ status.premium.check-out: unconfirmed|requested|completed



+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Parameters
        + product_id (required,number,`5`) - Product Id. user must have product admin rights.
        + page (optional,number,`1`) - Pagination index.
        + query (required, string, `23444`) - reservation id, user email or phone_number. incomplete strings allowed. 

+ Response 200 (application/json)

        {
            "status":"ok",
            "page":0,
            "pagination": 100,
            "total_services":1,
            "reservations":
            [
                {
                    "reservation_id":23444,
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-06T22:35:17.02",
                    "end_date": "2017-05-07T22:35:17.02",
                    "client_id": 23455,
                    "client_email": "pseglar@gmail.com",
                    "total_price": 28.45,
                    "paid": true,
                    "status":
                    {
                        "service":"reserved"
                    }
                }
            ]
        }

## MANAGE SERVICE [/adminservice/{reservation_id}]
### VIEW SERVICE [GET]

Listado de servicios completados



variable possible values
+ status.service options: reserved | in | out
+ status.premium.check-in: unconfirmed|requested|completed
+ status.premium.check-out: unconfirmed|requested|completed



+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Parameters
        + reservation_id (required,number,`23444`) - Id. user must have rights

+ Response 200 (application/json)

        {
            "status":"ok",
            "reservation":
                {
                    "reservation_id": 23444,
                    "client_id": 23455,
                    "client_email": "pseglar@gmail.com",
                    "profile_id": 3445,
                    "profile_name": "Acmesa",
                    "company_id": null,
                    "company_name": null,
                    "costcenter_id": null,
                    "costcenter_name": null,
                    "product": {
                        "product_id": 12,
                        "service": "express",
                        "product_price": 18.9,
                        "paid": false
                    },
                    "reservation_date": "2017-05-01T22:35:17.02",
                    "start_date": "2017-05-05T22:35:17.02",
                    "end_date": "2017-05-16T22:35:17.02",
                    "trip": {
                        "driver":null,
                        "phone":null,
                        "in_terminal": 1001,
                        "in_passengers": 2,
                        "out_terminal": 1002,
                        "out_passengers": 2,
                        "vehicle": {
                            "vehicle_id": null,
                            "type": null,
                            "plate": "4565GHM"
                        },
                        "flight_number":"IB45546",
                        "baggage": true
                    },
                    "extras": [
                        {
                            "extra_id": 23,
                            "name": "Cubierto",
                            "icon": "house",
                            "description": "Aparcar en zona cubierta",
                            "unitary_price": 1,
                            "price_calculation": "daily",
                            "price": 2,
                            "paid": false
                        },
                        {
                            "extra_id": 24,
                            "name": "Lavado exterior",
                            "type":"wash",
                            "icon": "house",
                            "description": "Limpieza y encerado, limpieza de llantas, de cristales y de plásticos",
                            "unitary_price": 7.55,
                            "price_calculation": "final_price",
                            "price": 7.55,
                            "paid": false
                        }
                    ],
                    "promos": [
                        {
                            "promo_id": 23,
                            "promo_name": "RAC",
                            "discount": 0.45
                        }
                    ],
                    "status":
                    {
                        "service": "reserved",
                        "premium": {
                            "check-in": "unconfirmed|requested|completed",
                            "check-out": "unconfirmed|requested|completed",
                            "client": {
                                "timestamp": "2017-05-01T22:35:17.02",
                                "waiting": 0,
                                "position": {
                                    "lat": 0.34456645,
                                    "lng": 0.34456645
                                },
                                "prediction": {
                                    "distance": 345,
                                    "duration": 34556
                                }
                            },
                            "agent": {
                                "agent_id": 345435,
                                "name": "Pau Seglar",
                                "picture": "https://www.aparcandgo.com/images/43534645645",
                                "waiting": 0,
                                "position": {
                                    "lat": 0.34456645,
                                    "lng": 0.34456645
                                },
                                "prediction": {
                                    "distance": 345,
                                    "duration": 34556
                                }
                            }
                        }
                    },
                    "total_price": 28.45,
                    "paymethod_id": null,
                    "paymethod": null,
                    "paid": false,
                    "agent_observations":"blablabla",
                    "park_lot":
                    {
                        "observations":"blablabla",
                    }
                    "log": [
                        {
                            "timestamp": "2017-01-05T22:35:17.02",
                            "source": "client|agent[pseglar@aparcandgo.com]",
                            "event": "Reserva realizada"
                        },
                        {
                            "timestamp": "2017-01-05T22:35:17.02",
                            "source": "client",
                            "event": "Entrada a parking"
                        }
        
                    ]
                }
        }
### UPDATE SERVICE [PUT]
all items are optional.
profile and paymethod must be valid user profile/paymethod

updatable items:
+ profile
+ paymethod
+ trip - reservation trip parameters will be updated from VALET APP CHECK-IN
+ enddate
+ extras -> WARNING. IF EXTRAS ARE UPDATE. ALL WANTED EXTRAS MUST BE SEND. TO REMOVE EXTRAS, SEND VOID "extras" array
+ enddate
+ observations (multiple items)

+ Request (application/json)

    Reserva servicio express.
    
    + Body
    
            {
                "profile_id":8,
                "paymethod_id":246,
                "end_date": "2017-05-16T22:35:17.02",
                "trip":
                    {
                        "driver":"Pau Seglar,
                        "phone":607789898,
                        "in_terminal":1001,
                        "out_terminal":1002,
                        "vehicle":{
                            "vehicle_id":null,
                            "type":null,
                            "plate":"4565GHM",
                            "km":130000,
                            "fuel_level":6,
                        },
                        "flight_number":"IB45546",
                        "baggage": true
                        
                    },
                "extras":
                    [
                        {
                        "extra_id":23
                        },
                        {
                        "extra_id":24
                        },
                    ],
                
                "agent_observations":"blablabla",
                "park_lot":
                {
                    "observations":"blablabla",
                }
            }

    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35


+ Response 200 (application/json)

        {
        "status":"ok",
        }
## UPLOAD IMAGES [/adminservice/image/{reservation_id}]
### SET PHOTOS [POST]

+ Request (multipart/form-data; boundary=---BOUNDARY)
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body 

            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
    
            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
    
            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY
+ Response 200 (application/json)

        {
        "status":"ok"
        }

## UPLOAD SIGNATURE [/adminserice/sign/{reservation_id}]
### UPLOAD USER SIGNATURE [POST]

+ Request (multipart/form-data; boundary=---BOUNDARY)
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    + Body 

            -----BOUNDARY
            Content-Disposition: form-data; name="image[file]"; filename="image.jpg"
            Content-Type: image/jpeg
            Content-Transfer-Encoding: base64
    
            /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a
            HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy
            MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAABAAEDASIA
            AhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAf/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFAEB
            AAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/AL+AD//Z
            -----BOUNDARY
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 403 (application/json)

        {
        "status":"already-signed"
        }
+ Response 404 (application/json)

        {
        "status":"not-found"
        }
## GATE VALIDATION [/adminservice/gatevalidation/{reservation_id}]
Usado para entrada/salida manual desde el pandel de gestion para el servicio express.
Sirve para indicar que el usuario procede a la entrada o a la salida. 
Para proceder a la salida, el servicio debe estar pagado. (ver /adminservice/charge)
### VALIDATE CAR ACCESS [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 403 (application/json)

        {
        "status":"payment-needed"
        }
+ Response 403 (application/json)

        {
        "status":"not-found"
        }

## CHARGE PAYMENT  [/adminservice/charge/{reservation_id}]
Una respuesta satisfactoria confirma el pago.
### REQUEST PAYMENT [POST]

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35

    
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 402 (application/json)

        {
        "status":"payment-required",
        }
+ Response 404 (application/json)

        {
        "status":"not-found"
        }
        
## REQUEST PREMIUM  [/adminservice/requestpremium/{reservation_id}]
### REQUEST ASSIGNATION [POST]
Request Premium service assignation to an agent.
If agent is not specified, automatic assignation is performed.
This method will send a push notification to the specified agent and will update reservation.status.premium.agent and reservation.status.premium.agent_status.
if reservation is already assigned, request will fail.

timeout will be set in secs.


+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Body
    
            {
            "agent_id":333,
            "timeout":60,
            }
    
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 403 (application/json)

        {
        "status":"already-assigned",
        }
+ Response 404 (application/json)

        {
        "status":"not-found"
        }
        
## ASSIGN PREMIUM [/adminservice/assignpremium/{reservation_id}]
### ASSIGN PREMIUM SERVICE [POST]
Assigns a service to the requesting agent.
Used to accept premium assignation requests or to self-assign a service.
if reservation is already assigned, request will fail if force is not set to true
use force  in  combination with warning modals.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Body
    
            {
            "agent_id":333,
            "force":false,
            }
    
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 403 (application/json)

        {
        "status":"already-assigned",
        }
+ Response 404 (application/json)

        {
        "status":"not-found"
        }
### UN-ASSIGN PREMIUM SERVICE [DELETE]
UN-Assigns a service to the requesting agent.
Used to reject premium assignation requests or to self-unassign a service.

Reason object is required.
Allowed reason.type:
+ timeout - Service was not accepted in time. User will be updated to OUT state and a push notification will be send to confirm new status.
+ change_service - User will perform a other service . if possible, reason.info should point to new service_id.
+ user_delay - User is delayed. reservation will be re-set to previous state and agent will Be ready again.
+ end_shift - Agent status will be set to out. service request will be automatically sent to other available agent.
+ other - reason.info required. service will be updated to previous state and agent status will be set to ready. This option will be erased in future. Agent must perform extra actions 





+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
    + Body
    
            {
            "agent_id":333,
            "reason":
            {
                "type":"change_service",
                "info":null,
            },
            }
    
+ Response 200 (application/json)

        {
        "status":"ok"
        }
        
+ Response 403 (application/json)

        {
        "status":"already-assigned"
        }
+ Response 404 (application/json)

        {
        "status":"not-found"
        }
        
        
## VIEW USER [/adminservice/user/{reservation_id}]
### GET [GET]

Retrieves user information 


+ default_invoice_profile: should be updated on first purchase if null.

+ Request
    + Headers

            Authorization: 03807cb390319329bdf6c777d4dfae9c0d3b3c35
        

+ Response 200 (application/json)

        {
            "status":"ok",
            "user":
            {
                "user_id":45346,
                "email":"pseglar@gmail.com",
                "name":"Pau",
                "lastname":"Seglar Segura",
                "phone": "607787857",
                "zip": "08301",
                "lang":"ca_ES",
                "accept_promos": true,
                "default_invoice_profile": null,
                "email_validated": true,
                "phone_validated": true,
                "points":
                {
                    "currentpoints":0.95
                },
                "profiles":
                [
                    {
                        "profile_id":45346,
                        "type":"corporate",
                        "company_id":34536,
                        "rights":
                        {
                            "role":"administrator",
                            "permissions": 
                            {
                                "manage_paymethods": true,
                                "manage_users": true,
                                "manage_reservations": true
                            }
                        },
                        "costcenter_id": 76645,
                        "invoice_name":"Acmesa",
                        "invoice_nif":"j66245523",
                        "invoice_email":"invoices@acmesa.com",
                        "invoice_address":"c/ alegria 23",
                        "invoice_city":"Barcelona",
                        "invoice_state":"Barcelona",
                        "invoice_zip": "08355"
                    },
                    {
                        "profile_id":45347,
                        "type":"professional",
                        "monthly_invoice": false,
                        "invoice_name":"Acmesa",
                        "invoice_nif":"j66245523",
                        "invoice_email":"invoices@acmesa.com",
                        "invoice_address":"c/ alegria 23",
                        "invoice_city":"Barcelona",
                        "invoice_state":"Barcelona",
                        "invoice_zip": "08355"
                    }
                ],
                "vehicles":
                [
                    {
                        "vehicle_id":45346,
                        "type":"vw golf gris",
                        "plate":"3453GHM"
                    },
                    {
                        "vehicle_id":45347,
                        "type":"renault twingo azul",
                        "plate":"B-5468-UC"
                    }
                ],
                "paymethods":
                [
                    {
                        "paymethod_id":45346,
                        "type":"company_card",
                        "company_id": 45678,
                        "costcenter_id": null,
                        "alias": "Acmesa",
                        "last_card_numbers": "4568",
                        "expire":{"year":19,"month":7},
                        "added": "2017-05-01T22:35:17.02",
                        "checked": "2017-05-01T22:35:17.02"
                    },
                    {
                        "paymethod_id":45346,
                        "type":"card",
                        "alias": "Acmesa",
                        "last_card_numbers": "4568",
                        "expire":{"year":19,"month":7},
                        "added": "2017-05-01T22:35:17.02",
                        "checked": "2017-05-01T22:35:17.02"
                    }
                ],
                "points":
                    {
                    "currentpoints":0.95,
                    }
            }
        }